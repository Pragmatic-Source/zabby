= Zabby

Zabby[http://zabby.org] is a Ruby library and client for Zabbix[http://www.zabbix.com/]. It provides a simple and
clean interface to the {Zabbix Web Services}[http://www.zabbix.com/documentation/1.8/api].

== Goals

There already are Ruby Zabbix libraries but some of them are unfinished (and apparently
abandonned) and some other's code is too complicated or poorly designed. This is why I decided
to write another tool for which my primary goal is to keep the code design, the user interaction
and application interface clean and simple.

Zabby has the following caracteristics:
- Works both as a Ruby API and a command line tool.
- Uses an internal Ruby DSL (Domain Specific Langage) that give access to the full power of
  Ruby scripting in your configurarion files. No need for a specific configuration language.
- Simple design: avoids spaghetti code, WTF and facepalm, unlike some other
  Ruby Zabbix libraries.

== Examples

=== API use

The barebone API can be used in Ruby like this:

    require "rubygems"
    require "zabby"
    require "pp"

    z = Zabby.init do
      host "https://monitoring.example.com"
      user "api_user"
      password "s3cr3t"
      proxy_host "http://10.10.10.10"
      proxy_user "john"
      proxy_password "D0e"
    end
    z.login

    pp z.connection.perform_request("host", "get", { "filter" => { "host" => "master.example.com" } })
    pp z.connection.perform_request("item", "get", { "host" => "master.example.com", "output" => "shorten" })

- The _host_, _user_ and _passord_ are necessary.
- If you don't provide the path to the JSON-RPC script "/api_jsonrpc.php" is appended
  to the URI automatically.
- The <em>proxy_*</em> settings are optionnal.

=== Shell (experimental)

*zabbysh* is an experimental Zabbix Shell. It runs either interactively or
can be used to execute a command file with the "-f CMD_FILE" option.

If the command file does not end with "exit" then the program drops into
the shell after executing the file.

==== Interactive shell

    # zabbysh
    zabby> set host "https://monitoring.example.com"
    zabby> set user "api_user"
    zabby> set password "s3cr3t"
    zabby> set proxy_host "http://10.10.10.10"
    zabby> set proxy_user "john"
    zabby> set proxy_password "prD0e"
    zabby> login
    zabby> logged_in?
    zabby> host.get "filter" => { "host" => "monitor.example.com" }, "output" => "extend"
    zabby> item.get "host" => "monitor.example.com", "output" => "refer"
    zabby> [...]
    zabby> logout
    zabby> exit

==== Execute a command script

Create a file and put the same instructions as above in it, then execute *zabbysh*:

    # zabbysh --file my_zabbix_commands.txt

== Requirements

- Ruby 1.8.5. It basically runs anywhere!
- JSON library: 'json' or 'json_pure'
- OptionParser
- Readline (optionnal, used by the interactive shell)

== References

- Main web site: http://zabby.org
- GitHub projet: https://github.com/Pragmatic-Source/zabby

== Author

Farzad FARID mailto:ffarid@pragmatic-source.com

Thanks to:
- Jean-Hadrien Chabran (jhchabran): Advices on code design.
- Nicolas Blanco (slainer68): Advices on code design and Triple Facepalming after reading other Ruby/Zabbix code.
- Renaud Chaput (renchap): For suggesting the "zabby" name.

=== Sources of inspiration

- Adam Wiggins's Rush[https://github.com/adamwiggins/rush] for the interactive shell.
- Other Zabbix Ruby libraries (only the good parts ;) ):

zabcon[http://trac.red-tux.net/]::
  Zabcon is a command line interface for Zabbix written in Ruby

rzabbix[http://github.com/neerfri/rzabbix]::
  Zabbix API client for Ruby

rubix[https://github.com/dhruvbansal/rubix]::
  Rubix is a Ruby client for Zabbix

== License

This software is release under the <b>Simplified BSD license</b>. See the LICENSE file.
